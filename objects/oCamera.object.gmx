<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>time = 0;
shake = 0;

num = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if(instance_exists(oRacer) &amp;&amp; !oMenu.madeIt) {
    view_xview[0] = x - view_wview[0] / 2;
    view_yview[0] = y - view_hview[0] / 2;
    
    move_towards_point(oRacer.x, oRacer.y, point_distance(x, y, oRacer.x, oRacer.y) / 4);
    
    background_hspeed[1] = oRacer.hsp / 1.5;
    background_vspeed[1] = oRacer.vsp / 1.5;
    background_hspeed[2] = oRacer.hsp / 3;
    background_vspeed[2] = oRacer.vsp / 3;
} else {
    speed = 0;
    
    view_xview[0] = x - view_wview[0] / 2;
    view_yview[0] = y - view_hview[0] / 2;
    
    background_hspeed[1] = 0;
    background_vspeed[1] = 0
    background_hspeed[2] = 0
    background_vspeed[2] = 0
}

x += random_range(-shake, shake);
y += random_range(-shake, shake);

shake = lerp(shake, 0, 0.1);

instance_activate_all();
instance_deactivate_region(view_xview[0] - 32, view_yview[0] - 32, view_wview[0] + 32, view_hview[0] + 64, false, true);
instance_activate_object(oDeath);
instance_activate_object(oMenu);
instance_activate_object(oSettings);

time += 0.15;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw us vs other guy
for(i = 0; i &lt; 20; i++) {
    rad = 2;
    if(i == 10)
        rad = 4;
        
    draw_set_color(c_white);
    draw_circle(view_xview[0] + 40 + (i * 12), view_yview[0] + 24, rad, false);
}

posX = (oDeath.x / room_width) * 240;
//posX = 0;
if(instance_exists(oRacer))
    posX2 = (oRacer.x / room_width) * 240;
//posX2 = 0;

//draw_set_color(c_aqua);
//draw_rectangle(view_xview[0] + 40 + posX, view_yview[0] + 19, view_xview[0] + 40 + posX + 4, view_yview[0] + 29, false);
//draw_set_color(c_purple);
//draw_rectangle(view_xview[0] + 40 + posX2, view_yview[0] + 21, view_xview[0] + 40 + posX2 + 4, view_yview[0] + 27, false);
draw_set_color(c_white);
draw_sprite_ext(sIconDeath, 0, view_xview[0] + 42 + posX, view_yview[0] + 23, 1.5 - (sin(time) * 0.1), 1.5 + (sin(time) * 0.1), 0, c_white, 1);
if(instance_exists(oRacer)) {
    draw_sprite_ext(global.playerHeadSprite, 0, view_xview[0] + 42 + posX2, view_yview[0] + 23, 1.25 * oRacer.xscale, 1.25, 0, c_white, 1)
    if(oRacer.stationaryHeadSprite != noone)
        draw_sprite_ext(oRacer.stationaryHeadSprite, 0, view_xview[0] + 42 + posX2, view_yview[0] + 23, 1.25 * oRacer.xscale, 1.25, 0, c_white, 1);
} else {
    draw_sprite_ext(sIconDeath, 0, view_xview[0] + 42 + posX2, view_yview[0] + 23, 1.25, 1.25, 0, c_white, 1)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
